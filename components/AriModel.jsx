/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client'
import React, { useEffect, useRef } from 'react'
import { useAnimations, useFBX, useGLTF, axesHelper } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useControls } from 'leva'
import * as THREE from 'three'

export function AriModel(props) {
  const { animation } = props

  const { headFollow, cursorFollow, wireframe } = useControls({
    headFollow: false,
    cursorFollow: false,
    wireframe: false,
  })
  const group = useRef()
  const { nodes, materials } = useGLTF('/assets/3dModels/ari.glb')

  const { animations: gamingAnimation } = useFBX('/animation/Gaming.fbx')
  const { animations: standingAnimation } = useFBX('/animation/Standing.fbx')
  const { animations: fallingAnimation } = useFBX('/animation/Falling.fbx')

  gamingAnimation[0].name = 'Gaming'
  standingAnimation[0].name = 'Standing'
  fallingAnimation[0].name = 'Falling'

  const { actions } = useAnimations(
    [gamingAnimation[0], standingAnimation[0], fallingAnimation[0]],
    group
  )

  useEffect(() => {
    actions[animation]?.reset().fadeIn(0.5).play()
    return () => {
      actions[animation]?.reset().fadeOut(0.5)
    }
  }, [actions, animation])

  useEffect(() => {
    Object.values(materials).forEach((material) => {
      material.wireframe = wireframe
    })
  }, [wireframe])
  useFrame((state) => {
    if (headFollow) {
      group.current.getObjectByName('Head').lookAt(state.camera.position)
    }
    if (cursorFollow) {
      const target = new THREE.Vector3(state.mouse.x, state.mouse.y, 1)
      group.current.getObjectByName('Spine1').lookAt(target)
    }
  })

  return (
    <group {...props} ref={group} dispose={null}>
      {/* <axesHelper args={[5]} /> */}
      <group
        position={[-2.22, 2.73, 6]}
        rotation={[-Math.PI / 2, 0.1, -Math.PI]}
      >
        <primitive object={nodes.Hips} />
        <skinnedMesh
          frustumCulled="false"
          name="EyeLeft"
          geometry={nodes.EyeLeft.geometry}
          material={materials.Wolf3D_Eye}
          skeleton={nodes.EyeLeft.skeleton}
          morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
          morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
        />
        <skinnedMesh
          frustumCulled="false"
          name="EyeRight"
          geometry={nodes.EyeRight.geometry}
          material={materials.Wolf3D_Eye}
          skeleton={nodes.EyeRight.skeleton}
          morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
          morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
        />
        <skinnedMesh
          frustumCulled="false"
          name="Wolf3D_Head"
          geometry={nodes.Wolf3D_Head.geometry}
          material={materials.Wolf3D_Skin}
          skeleton={nodes.Wolf3D_Head.skeleton}
          morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
          morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
        />
        <skinnedMesh
          frustumCulled="false"
          name="Wolf3D_Teeth"
          geometry={nodes.Wolf3D_Teeth.geometry}
          material={materials.Wolf3D_Teeth}
          skeleton={nodes.Wolf3D_Teeth.skeleton}
          morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
          morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
        />
        <skinnedMesh
          frustumCulled="false"
          geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
          material={materials.Wolf3D_Outfit_Bottom}
          skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
        />
        <skinnedMesh
          frustumCulled="false"
          geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
          material={materials.Wolf3D_Outfit_Footwear}
          skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
        />
        <skinnedMesh
          frustumCulled="false"
          geometry={nodes.Wolf3D_Outfit_Top.geometry}
          material={materials.Wolf3D_Outfit_Top}
          skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
        />
        <skinnedMesh
          frustumCulled="false"
          geometry={nodes.Wolf3D_Hair.geometry}
          material={materials.Wolf3D_Hair}
          skeleton={nodes.Wolf3D_Hair.skeleton}
        />
        {/* <skinnedMesh
        geometry={nodes.Wolf3D_Facewear.geometry}
        material={materials.Wolf3D_Facewear}
        skeleton={nodes.Wolf3D_Facewear.skeleton}
      /> */}
      </group>
    </group>
  )
}

useGLTF.preload('/assets/3dModels/ari.glb')
